@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model prjChatBot.Models.HomePageViewModel
@{
    ViewData["Title"] = "Home Page";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - prjChatBot</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/styles.css" asp-append-version="true" />



</head>
<body>
    <div class="container">
  
            <div id="chatbot">
                <div id="chat-icon" onclick="toggleChat()">
                    @foreach (var chatboticon in Model.ChatbotIcons)
                    {
                        <img src="@Url.Content("~/images/" + chatboticon.Picture)" alt="Chatbot" id="icon-img" asp-append-version="true">
                    }
                </div>
                <div id="chat-box" class="hidden">
                    <div id="chat-header">
                        <span>桃園好農</span>
                        @foreach (var refreshicon in Model.RefreshIcons)
                        {
                            <img src="@Url.Content("~/images/" + refreshicon.Picture)" alt="Refresh" id="refresh-icon" onclick="refreshChat()" asp-append-version="true">
                        }
                    </div>

                    <div id="chat-content">
                        <div class="initial-messages">
                            @if (Model.InitialMessages != null && Model.InitialMessages.Any())
                            {
                                foreach (var message in Model.InitialMessages)
                                {
                                    <div class="message-box">
                                        <div class="message bot">@message.Message</div>
                                    </div>
                                }
                            }
                        </div>

                        @if (Model.ProductCards.Any())
                        {
                            if (Model.ProductCards.Count() == 1)
                            {
                                <!-- 只有一張卡片，不顯示輪播 -->
                                var singleCard = Model.ProductCards.First();
                                <div class="card" style="max-width: 100%; height:auto; margin: auto;">
                                    <img src="@Url.Content("~/images/" + singleCard.ImageFileName)" class="card-img-top" alt="@singleCard.Title" asp-append-version="true">
                                    <div class="card-body">
                                        <h5 class="card-title">@singleCard.Title</h5>
                                    </div>
                                    <ul class="list-group list-group-flush">
                                        <li class="list-group-item"><a target="_blank" href="@singleCard.Url1" class="card-link">@singleCard.Name1</a></li>
                                        <li class="list-group-item"><a target="_blank" href="@singleCard.Url2" class="card-link">@singleCard.Name2</a></li>
                                    </ul>
                                </div>
                            }
                            else if (Model.ProductCards.Count() > 1)
                            {
                                <!-- 兩張或以上卡片，顯示輪播 -->
                                <div id="cardCarousel" class="carousel slide" data-bs-ride="carousel">
                                    <div class="carousel-inner">
                                        @if (Model.ProductCards.Any())
                                        {
                                            var first = true;
                                            @foreach (var card in Model.ProductCards)
                                            {
                                                <div class="carousel-item @(first ? "active" : "")">
                                                    <div class="card" style="max-width: 100%; height:auto; margin: auto;">
                                                        <img src="@Url.Content("~/images/" + card.ImageFileName)" class="card-img-top" alt="@card.Title" asp-append-version="true">
                                                        <div class="card-body">
                                                            <h5 class="card-title">@card.Title</h5>
                                                        </div>
                                                        <ul class="list-group list-group-flush">
                                                            <li class="list-group-item"><a target="_blank" href="@card.Url1" class="card-link">@card.Name1</a></li>
                                                            <li class="list-group-item"><a target="_blank" href="@card.Url2" class="card-link">@card.Name2</a></li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                first = false;
                                            }
                                        }
                                    </div>
                                    <button class="carousel-control-prev" type="button" data-bs-target="#cardCarousel" data-bs-slide="prev">
                                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                        <span class="visually-hidden">Previous</span>
                                    </button>
                                    <button class="carousel-control-next" type="button" data-bs-target="#cardCarousel" data-bs-slide="next">
                                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                        <span class="visually-hidden">Next</span>
                                    </button>
                                </div>
                            }
                        }
                    </div>

                    <div id="chat-input-area">
                        <button id="menu-button" onclick="toggleMenu()">☰</button>
                        <input type="text" id="chat-input" placeholder="輸入您的訊息...">
                        <button id="send-button" onclick="sendMessage()">傳送</button>
                    </div>
                    <div id="menu-box" class="hidden">
                        <table border="1">
                            <tr>
                                @foreach (var item in Model.Menus.Take(3))
                                {
                                    <td>
                                        <div class="menu-item" onclick="sendMenuItemMessage(this)">
                                            <img src="@Url.Content("~/images/" + item.ImageFileName)" alt="@item.Name" class="menu-icon">
                                            <br />@item.TextContent
                                        </div>
                                    </td>
                                }
                            </tr>
                            <tr>
                                @foreach (var item in Model.Menus.Skip(3).Take(3))
                                {
                                    <td>
                                        <div class="menu-item" onclick="sendMenuItemMessage(this)">
                                            <img src="@Url.Content("~/images/" + item.ImageFileName)" alt="@item.Name" class="menu-icon">
                                            <br />@item.TextContent
                                        </div>
                                    </td>
                                }
                            </tr>
                        </table>
                    </div>
                </div>
            </div>

            <script type="text/javascript">
                var chatbotIconUrl = '@Url.Content("~/images/" + Model.ChatbotIcons.FirstOrDefault()?.Picture)';
                var closeIconUrl = '@Url.Content("~/images/" + Model.CloseIcons.FirstOrDefault()?.Picture)';
            </script>

    </div>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/script.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>

    <script>
        // 當頁面內容載入時傳遞初始高度
        function sendHeight() {
            var height = document.body.scrollHeight;
            window.parent.postMessage(height, "http://localhost:8080");
        }

        window.addEventListener("load", function () {
            sendHeight();  // 當頁面加載完成後發送高度
        });

        // 使用 MutationObserver 監聽 DOM 變化，當高度改變時通知父頁面
        var observer = new MutationObserver(function (mutations) {
            sendHeight(); // 當 DOM 改變時，更新 iframe 的高度
        });

        // 監聽 body 內的變化
        observer.observe(document.body, {
            attributes: true,
            childList: true,
            subtree: true
        });
    </script>


    @await Html.PartialAsync("_ToastPartial")
</body>
</html>
